name: IOS workflow
on:
  workflow_call:
    inputs:
      artifact:
        required: false
        type: string
      appium_port:
        required: true
        type: string
      test_config:
        required: true
        type: string
      test_name:
        required: true
        type: string
      branch_name:
        required: false
        type: string

jobs:
  iOS-Job:
    runs-on: macos-latest

    steps:
      - name: Download artifact
        if: ${{ inputs.artifact != '' }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact}}
          path: CheckoutFolder

      - name: Switch to another branch
        if: ${{ inputs.artifact != '' }}
        run: |
          cd CheckoutFolder
          git checkout ${{ inputs.branch_name }}

      - name: Checkout code
        if: ${{ inputs.artifact == '' }}
        uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '22'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Cache Node.js Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Appium
        run: npm install -g appium

      - name: Set APPIUM_HOME environment variable
        run: echo "APPIUM_HOME=$(npm root -g)/appium" >> $GITHUB_ENV

      - name: Verify APPIUM_HOME
        run: echo "APPIUM_HOME is set to $APPIUM_HOME"

      - name: Install Xcode command-line tools
        run: xcode-select --install || true

      - name: Install FFmpeg
        run: brew install ffmpeg

      - name: Verify FFmpeg Installation
        run: ffmpeg -version

      - name: Install Carthage
        run: brew install carthage

      - name: Save Homebrew Cache
        if: steps.homebrew-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: /usr/local/Homebrew
          key: ${{ runner.os }}-brew-${{ hashFiles('Brewfile') }}

      - name: Cache Maven Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Check available Xcode versions
        run: ls /Applications/

      - name: Set Xcode version
        run: |
          sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer

      - name: Check Runtime list
        run: xcrun simctl list runtimes

      - name: Start iOS Simulator
        id: start_simulator
        run: |
          DEVICE_UDID=$(xcrun simctl create "iPhone-13" com.apple.CoreSimulator.SimDeviceType.iPhone-13 com.apple.CoreSimulator.SimRuntime.iOS-17-0)
          xcrun simctl boot $DEVICE_UDID
          echo "SIMULATOR_UDID=$DEVICE_UDID" >> $GITHUB_ENV
          echo "The iOS Simulator UDID is $DEVICE_UDID"

      - name: Install XCUITest driver
        run: appium driver install xcuitest

      - name: Start Appium server
        run: |
          appium driver doctor xcuitest
          nohup appium -a 0.0.0.0 -p ${{ inputs.appium_port }} -pa /wd/hub > appium_log.txt 2>&1 &

      - name: Install dependencies
        run: |
          if [ "${{ inputs.artifact }}" != "" ]; then
            cd CheckoutFolder
          fi
          mvn install -DskipTests

      - name: Run Tests
        run: |
          if [ "${{ inputs.artifact }}" != "" ]; then
            cd CheckoutFolder
          fi
          mvn test "-DsuiteFile=${{ inputs.test_config }}" "-DudidIOS=$SIMULATOR_UDID" "-DappiumPort=${{ inputs.appium_port }}"

      - name: View appium log
        if: always()
        run: cat appium_log.txt


      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test Reports - ${{ inputs.test_name }}
          path: |
            **/*.mp4
            **/html/index.html
            **/reportng.css
            **/reportng.js
            **/suite*_test*_results.html

      - name: Remove cloned repo
        if: ${{ inputs.artifact != '' }}
        run: |
          rm -r CheckoutFolder
